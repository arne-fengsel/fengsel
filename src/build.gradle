/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'arne' at '12/6/15 10:51 AM' with Gradle 2.9
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    //jcenter()
    mavenCentral()
}


// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'
    
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
	//compile 'org.springframework.boot:spring-boot-starter-web:1.3.0.RELEASE'
	compile 'org.springframework.boot:spring-boot-starter-jetty:1.3.0.RELEASE'
	//compile 'org.springframework.boot:spring-boot-starter-tomcat:1.3.0.RELEASE'
	
	//compile fileTree(dir: 'libs', include: '*.jar')
	
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

task copyToLib( type: Copy ) {
    into "$buildDir/libs/lib"
    from configurations.runtime
}

task fatjar(type: Jar) {
   from { configurations.compile.collect {it} }
   //into "lib"
   
   with jar
   manifest { 
   		attributes ( 
   			'Main-Class': 'org.springframework.boot.loader.JarLauncher',
   			'Class-Path': configurations.runtime.files.collect{ it.getName() }.join(' ')
   			'Start-Class': 'no.mesan.fagark.reaktiv.fengsel.depot.Application'
   		)
    }
}	

jar {

   dependsOn copyToLib

   manifest { 
   		attributes ( 
   			'Main-Class': 'no.mesan.fagark.reaktiv.fengsel.depot.Application',
   			'Class-Path': configurations.runtime.files.collect{ "lib/" + it.getName() }.join('	')
   		)
    }
}	


from {configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }